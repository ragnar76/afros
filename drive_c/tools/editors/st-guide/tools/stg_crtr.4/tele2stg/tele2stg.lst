' ------------------------------------------------------------------------------
' - TELE2STG, ein Tool fÅr ST-Guide & Tele Office                              -
' -                                                                            -
' - von Gregor Duchalski, Baueracker 15a, 44627 Herne                          -
' -     eMail: Gregor_Duchalskido.maus.ruhr.de                                 -
' -                                                                            -
' - Wandelt den Tele Office beiliegenden Text HANDBUCH.TXT in eine STG-Datei,  -
' - die vom HCP in einen HYP-Text verwandelt werden kann. Dieser Quelltext     -
' - darf im verÑnderten Zustand nicht mehr weitergegeben werden!               -
' ------------------------------------------------------------------------------
$m512000
'
init
'
IF @laden("") !F:\T_OFFICE\DOKU\HANDBUCH.TXT")
  '
  scanning
  speichern("") !M:\T_OFFICE.STG")
  '
ENDIF
'
exit
' ---------------------------------------------
> PROCEDURE init
  LOCAL a&,a$
  '
  ~WIND_UPDATE(1)                             ! BEG_UPDATE
  DEFFILL 0
  CLIP OFF
  ' -------------------------------------------
  anz&=4000
  DIM a$(anz&),inx$(200)
  a$(0)="--"                                  ! Damit's beim Scannen nicht beachtet wird
  '
  lf$=CHR$(13)+CHR$(10)                       ! Linefeed
  t$=STRING$(52,"-")                          ! Trennlinie, optisch schîner
  sp$=CHR$(252)                               ! Zu konvertierendes 'Space'
  ft1$=CHR$(172)                              ! 'Fett'
  ft2$=CHR$(171)                              ! 'Nicht mehr fett'
  z$=CHR$(34)                                 ! AnfÅhrungszeichen
  ' -------------------------------------------
  ~GRAF_HANDLE(wchar&,hchar&,a&,a&)           ! AES-Handle, Zeichenbreite/Hîhe
  '
  ~WIND_GET(0,7,deskx&,desky&,deskw&,deskh&)  ! Hintergrundfenster
  '
  w_attr&=&X1                                 ! Fenster erzeugen...
  w_handle&=WIND_CREATE(w_attr&,deskx&,desky&,deskw&,deskh&)
  IF w_handle&<=0
    END
  ENDIF                                       ! ...kein Fenster mehr frei
  '
  INLINE wt%,16
  CHAR{wt%}=" TELE2STG "                      ! Titel setzen...
  ~WIND_SET(w_handle&,2,CARD(SWAP(wt%)),CARD(wt%),0,0)
  '
  ww&=wchar&*50                               ! Fenster zentrieren
  wh&=hchar&*10
  wx&=(deskw&-ww&)/2
  wy&=(deskh&-wh&)/2
  '
  ~WIND_CALC(0,w_attr&,0,0,ww&,wh&,a&,a&,ww&,wh&)       ! WC_BORDER
  ~WIND_OPEN(w_handle&,wx&,wy&,ww&,wh&)       ! ôffnen
  '
  ~WIND_CALC(1,w_attr&,wx&,wy&,ww&,wh&,wx&,wy&,ww&,wh&) ! WC_WORK
  ' -------------------------------------------
  READ a$                                     ! Version lesen
  '
  PBOX wx&,wy&,wx&+PRED(ww&),wy&+PRED(wh&)
  TEXT wx&,wy&+hchar&,"TELE2STG, STG converter for ST-Guide"
  TEXT wx&,wy&+hchar&*2,"v"+a$+", Ω1994 by Greg Gregorian"
  '
RETURN
> PROCEDURE exit
  '
  ~WIND_CLOSE(w_handle&)
  ~WIND_DELETE(w_handle&)
  '
  ~WIND_UPDATE(0)                             ! END_UPDATE
  '
RETURN
' ---------------------------------------------
> FUNCTION laden(a$)
$F%
'
file$=a$
IF file$=""
  file$=@fileselect$("Text-Datei laden...","C:\*.TXT","HANDBUCH.TXT")
ENDIF
'
IF file$<>""
  '
  ' cconws("Loading : "+file$)
  TEXT wx&,wy&+hchar&*4,"Loading : "+file$
  '
  ~GRAF_MOUSE(2,0)
  OPEN "I",#1,file$
  RECALL #1,a$(),1 TO anz&,anz%
  CLOSE #1
  ~GRAF_MOUSE(0,0)
  '
  anz&=SUCC(anz%)
  '
  RETURN TRUE
ENDIF
'
RETURN FALSE
ENDFUNC
> PROCEDURE scanning
LOCAL z&,x&,y&,p&,p2&,b$,node$
'
x&=wx&+wchar&*9
y&=wy&+hchar&*5
TEXT wx&,y&,"Scanning: "
' -------------------------------------------
FOR z&=1 TO anz%
  '
  DEC anz&
  TEXT x&,y&,STR$(anz&,5)                   ! Cursor-Pos.+Zeile ausgeben
  ' -----------------------------------------
  p&=INSTR(a$(z&),sp$)                      ! ASCII 252 zu '-' konvertieren...
  WHILE p&>0
    BYTE{V:a$(z&)+PRED(p&)}=45
    p&=INSTR(a$(z&),sp$)
  WEND
  ' ----------------------------------------- Ist es ein Screen?
  is_title!=(MID$(a$(z&),2,1)="." OR MID$(a$(z&),3,1)=".") AND @is_number(a$(z&)) AND INSTR(a$(z&)," ")<7
  ' -----------------------------------------
  IF is_title!                              ! Fettschrift einschalten...
    b$=""
  ELSE
    b$="@{B}"
  ENDIF
  '
  p&=INSTR(a$(z&),ft1$)
  WHILE p&>0                                ! ASCII 172 gefunden...
    a$(z&)=LEFT$(a$(z&),PRED(p&))+b$+MID$(a$(z&),SUCC(p&))
    p&=INSTR(a$(z&),ft1$)                   ! ...nÑchstes ASCII 172
  WEND
  ' -----------------------------------------
  IF is_title!                              ! Fettschrift ausschalten...
    b$=""
  ELSE
    b$="@{0}"
  ENDIF
  '
  p&=INSTR(a$(z&),ft2$)
  WHILE p&>0                                ! ASCII 171 gefunden...
    a$(z&)=LEFT$(a$(z&),PRED(p&))+b$+MID$(a$(z&),SUCC(p&))
    p&=INSTR(a$(z&),ft2$)                   ! ...nÑchstes ASCII 171
  WEND
  ' -----------------------------------------
  IF is_title!                              ! Ist's ein neuer Screen
    '
    p&=INSTR(a$(z&)," ")
    node$=MID$(a$(z&),SUCC(p&))
    '
    b$=LEFT$(a$(z&),p&)+SPACE$(6-p&)+node$
    node_exists(node$,b$)                   ! Falls es den Scren schon gibt
    '
    INC inx&
    inx$(inx&)=b$                           ! ...in Index-Liste aufnehmen
    '
    a$="@endnode"+lf$+t$+lf$
    a$=a$+"@node "+z$+node$+z$+lf$
    a$(z&)=a$+"@{B}"+a$(z&)+"@{0}"+lf$      ! ...Trennlinie + Leerzeile einfÅgen
    '
    is_title!=TRUE
  ENDIF
  ' -----------------------------------------
  '
NEXT z&
'
RETURN
> PROCEDURE speichern(a$)
LOCAL p$
'
' -------------------------------------------
IF a$=""
  p$=@pfad$(file$)+"*.STG"
  a$=@fileselect$("STG-Datei speichern...",p$,"T_OFFICE.STG")
ENDIF
'
IF a$<>""
  '
  TEXT wx&,wy&+hchar&*6,"Writing : "+a$
  '
  ~GRAF_MOUSE(2,0)
  OPEN "O",#1,a$
  '
  PRINT #1;t$                               ! Hauptseite...
  PRINT #1;"@node "+z$+"Tele Office Handbuch"+z$
  PRINT #1
  '
  STORE #1,inx$(),1 TO inx&                 ! Inhaltsverzeichnis
  '
  STORE #1,a$(),1 TO anz%                   ! Weitere Kapitel
  '
  PRINT #1;"@endnode"
  '
  CLOSE #1
  ~GRAF_MOUSE(0,0)
ENDIF
'
RETURN
' ---------------------------------------------
> PROCEDURE node_exists(VAR node$,b$)
LOCAL a&
'
' öberprÅft, ob es den Screen 'node$' schon gibt und hÑngt
' dann einen '.' an. Nîtig z.B. fÅr 'Das Telefon-Icon'.
' -------------------------------------------
FOR a&=inx& DOWNTO 1
  EXIT IF node$=MID$(inx$(a&),7)
NEXT a&
'
IF a&>=1
  node$=node$+"."
  b$=b$+"."
ENDIF
'
RETURN
'
> FUNCTION is_number(a$)
$F%
LOCAL a|
'
' RÅckgabe: TRUE, wenn das erste Zeichen des Strings eine Zahl ist
' -------------------------------------------
a|=ASC(a$)
IF a|>=ASC("0") AND a|<=ASC("9")
RETURN TRUE
ENDIF
'
RETURN FALSE
ENDFUNC
'
> PROCEDURE cconws(a$)
'
' Cconws() mit Linefeed (wie PRINT)
' -------------------------------------------
a$=a$+CHR$(13)+CHR$(10)+CHR$(0)
~GEMDOS(9,L:V:a$)
'
RETURN
> PROCEDURE cconws2(a$)
'
' Cconws() ohne Linefeed (wie PRINT;)
' -------------------------------------------
a$=a$+CHR$(0)
~GEMDOS(9,L:V:a$)
'
RETURN
'
> FUNCTION fileselect$(a$,pfad$,file$)
LOCAL f&,b&
'
~WIND_UPDATE(1)                           ! BEG_UPDATE
'
IF INT{ADD({ADD(GB,4)},0)}<&H140          ! Altes GEM/TOS...
f&=FSEL_INPUT(pfad$,file$,b&)
'
ELSE                                      ! Sonst mit Titelzeile...
f&=@fsel_exinput(a$,pfad$,file$,b&)
ENDIF
'
~WIND_UPDATE(0)                           ! END_UPDATE
'
IF f&=0 OR b&=0                           ! Abbruch oder Error...
RETURN ""
ENDIF
'
RETURN LEFT$(pfad$,RINSTR(pfad$,"\"))+file$
ENDFUNC
> FUNCTION fsel_exinput(a$,VAR pfad$,file$,b&)
$F%
'
a$=a$+CHR$(0)         ! Titel
pfad$=pfad$+CHR$(0)+SPACE$(400)
file$=file$+CHR$(0)+SPACE$(150)
'
GCONTRL(0)=91
GCONTRL(1)=0
GCONTRL(2)=2
GCONTRL(3)=3
GCONTRL(4)=0
'
ADDRIN(0)=V:pfad$     ! Pfad
ADDRIN(1)=V:file$     ! Datei
ADDRIN(2)=V:a$        ! Titel
'
GEMSYS
'
pfad$=CHAR{V:pfad$}   ! Pfad
file$=CHAR{V:file$}   ! Dateiname
'
b&=GINTOUT(1)         ! Abbruch=0, OK=1
'
RETURN GINTOUT(0)     ! Fehlercode
ENDFUNC
' ---------------------------------------------
> PROCEDURE daten
'
DEFFN pfad$(a$)=LEFT$(a$,RINSTR(a$,"\"))    ! Extrahiert Pfadnamen
'
version:
DATA 0.90(20.10.94)
'
RETURN
