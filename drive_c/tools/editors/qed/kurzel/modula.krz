#
# qed KÅrzel-Datei fÅr Modula2
#
a  =AND 
ab =ABS(~)
ac =ARRAY ~OF CHAR;
ad =ADDRESS;
ai =ARRAY ~OF INTEGER;
al =ARRAY OF LOC
ar =ARRAY [~..] OF 
b  =BEGIN
bl =BOOLEAN;
bs =BITSET;
bt =BYTE;
cp =CAP(~)
cd =CARDINAL;
cs =CASE ~ OF
c  =CHAR;
cr =CHR(~)
cn =CONST
dc =DEC(~)
dm =DEFINITION MODULE ~;
dp =DISPOSE(~);
dv =DIV 
e  =ELSE
es =ELSIF 
en =END ~;
ec =END(*CASE*);
ef =END(*FOR*);
ei =END(*IF*);
el =END(*LOOP*);
er =END(*RECORD*);
ew =END(*WHILE*);
eh =END(*WITH*);
et =EXIT;
ex =EXPORT ;
eq =EXPORT QUALIFIED ~;
f  =FALSE
fi =FROM ~IMPORT 
fl =FLOAT(~)
fo =FOR ~:= TO DO
gm =GD.Msg("~");
i  =IF ~ THEN
im =IMPLEMENTATION MODULE ~;
in =IN 
ic =INC(~);
il =INCL(~);
ip =IMPORT ~;
it =INTEGER;
iwc=IO.WriteChar(~);
iwi=IO.WriteInt(~);
iwl=IO.WriteLn;
iwr=IO.WriteReal(~);
iws=IO.WriteString("~");
lb =LONGBITSET;
lc =LONGCARD;
li =LONGINT; 
lr =LONGREAL;
l  =LOOP
m  =MOD 
mo =MODULE ~;
ne =NEW(~);
ni =NIL
n  =NOT 
od =ODD(~);
of =OF 
o  =OR 
or =ORD(~);
pt =POINTER TO 
pr =PROC;
p  =PROCEDURE 
ra =REAL;
re =RECORD
rp =REPEAT
r  =RETURN ~;
rd =Read(~);
rc =ReadCard(~);
ri =ReadInt(~);
rr =ReadReal(~);
rs =ReadStr(~);
s  =SET OF 
si =SIZE(~);
st =String;
to =TO 
t  =TRUE
tc =TRUNC(~);
th =THEN
ts =TSIZE(~);
ty =TYPE
u  =UNTIL 
v  =VAR 
w  =WHILE ~ DO
wh =WITH ~ DO
wo =WORD;
we =Write(~);
wc =WriteCard(~,0);
wi =WriteInt(~,0);
wl =WriteLn;
wr =WriteReal(~,,);
ws =WriteString("~");
